{"version":3,"sources":["components/BookCard.jsx","components/Header.jsx","components/SearchBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["BookCard","props","Card","style","maxWidth","Img","variant","src","url","Body","Title","title","Text","author","href","Button","Header","className","SearchBar","useState","book","setBook","type","placeholder","onChange","event","newBook","target","value","onClick","onSearched","App","result","setResult","fetch","headers","then","response","json","data","items","catch","err","console","log","alert","onClickButton","e","preventDefault","map","index","id","volumeInfo","authors","imageLinks","smallThumbnail","infoLink","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAoBeA,MAdf,SAAkBC,GACd,OACC,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,SAAU,SAAzB,UACC,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKN,EAAMO,MACnC,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,UAAaT,EAAMU,QACnB,cAACT,EAAA,EAAKU,KAAN,UACGX,EAAMY,SAET,oBAAGC,KAAMb,EAAMa,KAAf,UAAqB,cAACC,EAAA,EAAD,CAAQT,QAAQ,UAAhB,4BAArB,cCLOU,MARf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACI,gDCeIC,MAhBhB,SAAmBjB,GAAO,IAAD,EACAkB,mBAAS,IADT,mBAChBC,EADgB,KACVC,EADU,KAQrB,OACI,uBAAQJ,UAAU,aAAlB,UACI,uBAAOK,KAAK,OAAOC,YAAY,kCAAkCC,SAPzE,SAAuBC,GACnB,IAAMC,EAAUD,EAAME,OAAOC,MAC7BP,EAAQK,IAKsFE,MAAOR,IAC/F,cAACL,EAAA,EAAD,CAASc,QAAU,WAAM5B,EAAM6B,WAAWV,IAASE,KAAK,SAAShB,QAAQ,YAAzE,oBAAqG,QCiCpGyB,MAxCf,WAAgB,IAAD,EACeZ,mBAAU,IADzB,mBACNa,EADM,KACEC,EADF,KAsBb,OACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAWa,WArBb,SAAuBV,GACpBA,EACCc,MAAM,iDAAmDd,EAAnD,6DAA6F,CACjGe,QAAS,CACP,eAAgB,sBAGnBC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACFN,EAAUM,EAAKC,UAElBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAZpBG,MAAM,2BAoBwBC,cAAe,SAACC,GAAOA,EAAEC,oBAE/D,qBAAK/B,UAAU,kBAAf,SACGe,EAAOiB,KAAK,SAAC7B,EAAM8B,GACpB,OAAO,cAAC,EAAD,CAAuBC,GAAID,EAAOvC,MAAOS,EAAKgC,WAAWzC,MAAOE,OAAQO,EAAKgC,WAAWC,QAAS7C,IAAKY,EAAKgC,WAAWE,WAAWC,eAAgBzC,KAAMM,EAAKgC,WAAWI,UAAvJN,YC1BhBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.672698cf.chunk.js","sourcesContent":["import React from'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport '../App.css'\r\n\r\n\r\nfunction BookCard(props){\r\n    return(\r\n     <Card style={{ maxWidth: '15rem'}}>\r\n      <Card.Img variant=\"top\" src={props.url}/>\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>\r\n          {props.author}\r\n        </Card.Text>\r\n        <a href={props.href}><Button variant=\"primary\">Discover More </Button> </a>\r\n    </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\nexport default BookCard;","import React from 'react';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header className=\"header\">\r\n            <h1>Find a Book</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useState } from 'react';\r\n\r\nfunction SearchBar(props){\r\n  const [book, setBook]= useState('');\r\n   \r\n    function searchHandler(event){\r\n        const newBook = event.target.value;\r\n        setBook(newBook)\r\n    }\r\n\r\n    return(\r\n        <form   className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search for an author, a book...\" onChange={searchHandler} value={book}></input>\r\n              <Button  onClick= {()=> {props.onSearched(book)}}  type=\"button\" variant=\"secondary\">Search</Button>{' '}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport  default SearchBar\r\n","\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport BookCard from './components/BookCard'\nimport Header from './components/Header'\nimport SearchBar from './components/SearchBar'\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [result, setResult] = useState(([]))\n  const apiKey = \"AIzaSyDg3BvbTu5Wb-aP1hWU-RCR6S6lhC_pbNM\"\n  \n\n    function submitHandler(book){\n      !book ? alert(\"you must fill the form\") : \n        fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\"+ apiKey+ \"&maxResults=10\", {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response =>{\n            return response.json()\n        })\n        .then(data =>{\n            setResult(data.items)\n        })\n        .catch(err => console.log(err))\n    }\n\n    \n  return (\n    <div className=\"App\">\n      <Header />\n\n      <SearchBar onSearched={submitHandler} onClickButton={(e) =>{ e.preventDefault()}}/>\n\n      <div className=\"cards-container\">\n        {result.map( (book, index) => {\n        return <BookCard key= {index} id={index} title={book.volumeInfo.title} author={book.volumeInfo.authors} url={book.volumeInfo.imageLinks.smallThumbnail} href={book.volumeInfo.infoLink} />\n          })\n        }\n        \n       </div> \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
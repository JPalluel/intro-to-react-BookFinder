{"version":3,"sources":["components/BookCard.jsx","components/Header.jsx","components/SearchBar.jsx","components/Badge.jsx","components/FavBookList.jsx","App.js","reportWebVitals.js","index.js"],"names":["BookCard","props","react_default","a","createElement","Card","style","maxWidth","Button","onClick","onAdd","title","variant","index_es","icon","faPlus","Img","src","url","Body","Title","Text","author","href","Header","className","faBook","SearchBar","_useState","useState","_useState2","Object","slicedToArray","book","setBook","type","placeholder","onChange","event","newBook","target","value","onSearched","MyList","Badge","num","FavBookList","ListGroup","map","index","Item","key","onRemove","faMinus","App","result","setResult","_useState3","_useState4","count","setCount","_useState5","_useState6","list","setList","addBook","prevBook","concat","toConsumableArray","console","log","components_Header","components_Badge","components_FavBookList","length","newList","filter","item","components_SearchBar","fetch","headers","Content-Type","then","response","json","data","items","catch","err","alert","onClickButton","e","preventDefault","components_BookCard","id","volumeInfo","authors","imageLinks","smallThumbnail","infoLink","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a6942a8.chunk.js","sourcesContent":["import React from'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction BookCard(props){\r\n  \r\n    return(\r\n     <Card style={{ maxWidth: '15rem'}}>\r\n      <Button onClick= {() =>{props.onAdd(props.title)}} variant=\"light\"><FontAwesomeIcon icon={faPlus} /></Button>{' '}\r\n      <Card.Img variant=\"top\" src={props.url}/>\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>\r\n          {props.author}\r\n        </Card.Text>\r\n        <a href={props.href}><Button variant=\"secondary\">Discover More </Button> </a>\r\n    </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\nexport default BookCard;","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\r\nfunction Header(){\r\n    return(\r\n        <header className=\"header\">\r\n            <h1><FontAwesomeIcon icon={faBook} />  Find a Book</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useState } from 'react';\r\n\r\nfunction SearchBar(props){\r\n  const [book, setBook]= useState('');\r\n   \r\n    function searchHandler(event){\r\n        const newBook = event.target.value;\r\n        setBook(newBook)\r\n    }\r\n\r\n    return(\r\n        <form   className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"  Search for a book\" onChange={searchHandler} value={book}></input>\r\n            <Button  onClick= {()=> {props.onSearched(book)}}  type=\"button\" variant=\"secondary\">Search</Button>{' '}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport  default SearchBar\r\n","import React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nfunction MyList(props){\r\n    return(\r\n        <h4 className=\"list\">My List \r\n            <span className=\"list-counter\"><Badge variant=\"secondary\"> {props.num} </Badge></span>\r\n        </h4>\r\n    )\r\n}\r\n\r\nexport default MyList;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction FavBookList(props){\r\n    return(\r\n    <div className='book-list'>\r\n        <ListGroup variant=\"flush\">\r\n        {(props.title).map((title, index)=>{\r\n            return (\r\n            <ListGroup.Item key={index}>{title}\r\n             <Button onClick= {() =>{props.onRemove(title)}} variant=\"light\"><FontAwesomeIcon icon={faMinus} /></Button>{' '}</ListGroup.Item>\r\n        )\r\n        })}\r\n        </ListGroup>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FavBookList;","import React from'react';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BookCard from './components/BookCard';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport Badge from './components/Badge';\nimport FavBookList from './components/FavBookList';\n\nfunction App() {\n  const [result, setResult] = useState(([]));\n  const [count, setCount] = useState(0);\n  const [list, setList] = useState([]);\n\n\nfunction addBook(title){\n  setCount(count + 1);\n  setList((prevBook) =>{return [...prevBook, title]})\n  console.log(list);\n}\n\nfunction deleteBook(title){\n    if(list.length === 0){\n    setCount(0)\n  }\n  const newList = list.filter((item) => item !== title);\n  setList(newList);\n  setCount(count-1);\n}\n\nfunction submitHandler(book){\n  !book ? alert(\"you must fill the form\") : \n  fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\"+ process.env.REACT_APP_API_KEY + \"&maxResults=10\", {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response =>{\n      return response.json()\n    })\n    .then(data =>{\n      setResult(data.items)\n    })\n    .catch(err => console.log(err))\n}\n\nreturn (\n    <div className=\"App\">\n      <Header />\n      <Badge num={count}/>\n      <FavBookList title={list} onRemove={deleteBook} />\n      <SearchBar onSearched={submitHandler} onClickButton={(e) =>{ e.preventDefault()}}/>\n\n      <div className=\"cards-container\">\n        {result.map( (book, index) => {\n        return (\n        <BookCard key= {index} \n        id={index} \n        title={book.volumeInfo.title} \n        author={book.volumeInfo.authors} \n        url={book.volumeInfo.imageLinks.smallThumbnail}\n        href={book.volumeInfo.infoLink}\n        onAdd={addBook} />\n          )\n        })\n        } \n      </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}